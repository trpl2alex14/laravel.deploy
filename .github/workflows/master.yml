name: Deploy laravel shop Fleyt
run-name: Deploy repositiry ${{ github.GITHUB_REPOSITORY }}
on:
  push:
    branches: [ master ]
env:
  HOST_NAME: fleyt.ru
  HOST_DEPLOY_PATH: laravel.deploy
  SOURCE_PATH: laravel
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
      - name: Install Dependencies
        run: |
          cd ${{ env.SOURCE_PATH }}
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader --no-dev
          composer dump-autoload
      - name: Setup Environment File
        run: |
          cd ${{ env.SOURCE_PATH }}
          cp .env.example .env
          sed -i 's/DB_USERNAME=root/DB_USERNAME=${{ secrets.DB_USERNAME }}/g' .env
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=${{ secrets.DB_PASSWORD }}/g' .env
          sed -i 's/APP_KEY=/APP_KEY=${{ secrets.APP_KEY }}/g' .env
          sed -i 's/APP_URL=http\:\/\/localhost/APP_URL=https\:\/\/${{ secrets.DOMAIN }}/g' .env
          sed -i 's/APP_ENV=local/APP_ENV=production/g' .env
          sed -i 's/APP_DEBUG=true/APP_DEBUG=false/g' .env
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '19'
      - name: Install node dependencies & build production
        run: |
          cd ${{ env.SOURCE_PATH }}
          npm install
          npm run prod
          rm -rf node_modules
      - name: copy file via ssh key
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.IP_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          source: ${{ env.SOURCE_PATH }}, docker
          target: ${{ env.HOST_DEPLOY_PATH }}/${{ github.sha }}
          rm: true
      - name: executing remote ssh commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.IP_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            find ~/${{ env.HOST_DEPLOY_PATH }} -mindepth 1 -maxdepth 1 -type d -printf '%T@ %p\n' | sort -rnk1 | awk 'NR>5 { sub(/^\S+ /, "", $0); system("rm -rf \"" $0 "\"")}'
            chown 1000:1000 -R ~/${{ env.HOST_DEPLOY_PATH }}/${{ github.sha }}/${{ env.SOURCE_PATH }}
            cp -ru ~/${{ env.HOST_DEPLOY_PATH }}/${{ github.sha }}/${{ env.SOURCE_PATH }}/storage /var/www/
            chown 1000:1000 -R /var/www/storage
            rm -rf ~/docker
            ln -s ~/${{ env.HOST_DEPLOY_PATH }}/${{ github.sha }}/docker ~/docker
            rm -rf /var/www/${{ env.SOURCE_PATH }}
            ln -s ~/${{ env.HOST_DEPLOY_PATH }}/${{ github.sha }}/${{ env.SOURCE_PATH }} /var/www/${{ env.SOURCE_PATH }}
            rm -rf ~/${{ env.HOST_DEPLOY_PATH }}.${{ env.SOURCE_PATH }}
            ln -s ~/${{ env.HOST_DEPLOY_PATH }}/${{ github.sha }}/${{ env.SOURCE_PATH }} ~/${{ env.HOST_DEPLOY_PATH }}.${{ env.SOURCE_PATH }}
            cd ~/docker
            cp .env.example .env
            sed -i 's/SRC_PATH=laravel/SRC_PATH=${{ env.SOURCE_PATH }}/g' .env
            sed -i 's/DOMAIN=local.ru/DOMAIN=${{ env.DOMAIN }}/g' .env
            sed -i 's/ADMIN_EMAIL=partner@test.ru/ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}/g' .env
            sed -i 's/MYSQL_ROOT_PASSWORD=/MYSQL_ROOT_PASSWORD=${{ secrets.DB_PASSWORD }}/g' .env
            sed -i 's/MYSQL_PASSWORD=/MYSQL_PASSWORD=${{ secrets.DB_PASSWORD }}/g' .env
            docker-compose build
            docker stop $(docker ps -a -q)
            docker-compose down
            docker-compose up -d --remove-orphans
            docker-compose exec app bash -c '/var/www/scripts/server_deploy.sh'
            chmod +x ~/docker/certbot/renew-cert-ssl.sh
            cp ~/docker/certbot/renew-cert-ssl.sh /etc/cron.monthly